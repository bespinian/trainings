apiVersion: apps/v1
kind: Deployment
metadata:
  name: awesome-node
  labels:
    app: awesome-node
spec:
  replicas: 3
  template:
    metadata:
      name: awesome-node
      labels:
        app: awesome-node
    spec:
      containers:
        - name: awesome-node
          image: europe-west6-docker.pkg.dev/test3-gabriel/bespinian-test/awesome-node:1.0.6
          resources:
            limits:
              cpu: 100m
              memory: 120M
            requests:
              cpu: 100m
              memory: 120M
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 2
  selector:
    matchLabels:
      app: awesome-node
---
apiVersion: v1
kind: Service
metadata:
  name: awesome-node-svc
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: awesome-node
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    # If the class annotation is not specified it defaults to "gce".
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
    - http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: awesome-node-svc
                port:
                  number: 80
